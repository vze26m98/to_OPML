-- Explode text of selected DTPO records to OPML for Tinderbox:-- Takes the "plain text" of any record selection-- and converts to OPML format with records in a sequence-- and paragraghs as numbered children.-- Based on the work of Korm and Christian Grunenberg: thanks!-- Use as you like, but don't blame us if you destroy your data.-- If you finds bugs/issues/trouble, please send-- the source files that don't convert correctly to:-- Charles Turner <vze26m98@optonline.net>-- Version 0.02-- 23 April 2010-- Writes to file as UTF-8 instead of MacRoman-- "Name" attribute changed to "text" to comply with OPML specificationset theOpen to "<outline "set theClose to "/>"on opmlify(str)	set numChars to length of str	set escapedStr to ""	repeat with i from 1 to numChars		set char to character i of str		if char is equal to ">" then			set escapedStr to escapedStr & "&gt;"		else if char is equal to "<" then			set escapedStr to escapedStr & "&lt;"		else if char is equal to "&" then			set escapedStr to escapedStr & "&amp;"		else if char is equal to "\"" then			set escapedStr to escapedStr & "&quot;"		else if char is equal to (ASCII character 10) then			set escapedStr to escapedStr & "&#10;"		else if char is equal to (ASCII character 9) then			set escapedStr to escapedStr & "&#9;"		else			set escapedStr to escapedStr & char		end if	end repeat	return escapedStrend opmlifytell application id "com.devon-technologies.thinkpro2"	set this_database to current database	set these_items to the selection	if these_items is {} then error "Please select some contents"	set thisFileName to choose file name with prompt "Export" default name (name of this_database as string) & ".opml"		set theOPML to "<?xml version=\"1.0\" encoding=\"UTF-8\"?> " & return	set theOPML to theOPML & "<opml version=\"1.0\">" & return	set theOPML to theOPML & "<head>" & return	set theOPML to theOPML & "<title>" & (name of this_database as string) & "</title>" & return	set theOPML to theOPML & "</head>" & return	set theOPML to theOPML & "<body>" & return	-- This could actually show progress:	show progress indicator "Creating OPML..."		repeat with j in these_items				-- Get the record attributes:		-- You can add more following these examples.		-- Note trailing space.		set theLocation to "Location=\"" & my opmlify(location of j) & "\" "		set rawName to my opmlify(name of j)		set theName to "text=\"" & rawName & "\" "		set theComment to "DTcomment=\"" & my opmlify(comment of j) & "\" "		-- These shouldn't need to be opmlified?		set theDtUrl to "DTurl=\"" & "x-devonthink-item://" & uuid of j & "\" "		set theOrigUrl to "OriginalUrl=\"" & URL of j & "\" "				-- Do the tags:				set theTags to ""		set tagList to tags of j		repeat with t in tagList			set theTags to theTags & t & ";"		end repeat		set theTags to "DTtags=\"" & my opmlify(theTags) & "\" "				-- Start the document entry:		set theOPML to theOPML & theOpen & theName & theLocation & theComment & theDtUrl & theOrigUrl & theTags & ">" & return				-- Explode the "text"		set theText to plain text of j		set theParagraphs to paragraphs of theText		set numParags to count of theParagraphs		repeat with k from 1 to numParags			set theParag to "_note=\"" & my opmlify(item k of theParagraphs) & "\" "			set theEntry to theOpen & "text=\"" & rawName & " - Paragraph " & k & "\" " & theLocation & theComment & theDtUrl & theOrigUrl & theTags & theParag & theClose			-- Add it to the pile!			set theOPML to theOPML & theEntry & return		end repeat				-- Close the document entry:		set theOPML to theOPML & "</outline>" & return			end repeat		set theOPML to theOPML & "</body>" & return & "</opml>"	hide progress indicator	set theFile to open for access thisFileName with write permission	if (get eof of theFile) > 0 then		set eof of theFile to 0	end if	write theOPML as «class utf8» to theFile	close access theFileend tell